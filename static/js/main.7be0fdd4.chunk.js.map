{"version":3,"sources":["styles.js","components/LateralBar.js","components/Projects.js","components/Tabs.js","App.js","serviceWorker.js","index.js"],"names":["primaryColor","baseStyles","app","minHeight","window","screen","height","minWidth","position","content","padding","LateralBar","props","pageState","classes","this","className","list","role","Drawer","drawer","variant","anchor","open","paper","drawerPaper","List","ListItem","button","key","title","lateralIcon","Component","decorate","observable","withStyles","theme","width","flexShrink","boxShadow","backgroundColor","color","textAlign","listItem","nestedList","drawerWidth","marginLeft","nestedItem","marginTop","Projects","isProjectsOpen","Box","component","m","box","Typography","clsx","category","align","style","left","projectDrawerWidth","paddingLeft","Tabs","handleChange","event","newValue","value","AppBar","header","Toolbar","App","openCv","cv","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7be0fdd4.chunk.js","sourcesContent":["export const primaryColor = {\r\n  light: '#333842',\r\n  main: '#282c34',\r\n  dark: '#070709'\r\n};\r\n\r\nexport const secondaryColor = {\r\n  light: '#FDB556',\r\n  main: '#F36B21',\r\n  dark: '#C2551A'\r\n};\r\n\r\nexport const rootStyles = {\r\n  outerLoading: {\r\n    position: 'fixed',\r\n    height: '100%',\r\n    width: '100%',\r\n    zIndex: 2200,\r\n    display: 'table',\r\n    backgroundColor: 'rgba(255, 255, 255, .4)'\r\n  },\r\n  innerLoading: {\r\n    display: 'table-cell',\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle'\r\n  },\r\n  snackbar: {\r\n    height: 'auto',\r\n    lineHeight: 3,\r\n    whiteSpace: 'pre-line'\r\n  },\r\n  main: {\r\n    minHeight: '100%',\r\n    minWidth: '100%',\r\n    position: 'absolute',\r\n    backgroundColor: primaryColor.main\r\n  },\r\n  image: {\r\n    height: 200,\r\n    paddingTop: '10px'\r\n  },\r\n};\r\n\r\nexport const baseStyles = {\r\n  app: {\r\n    minHeight: (window.screen.height - 183),\r\n    minWidth: '100%',\r\n    position: 'absolute'\r\n  },\r\n  content: {\r\n    padding: 10\r\n  },\r\n};\r\n\r\nconst drawerWidth = 60;\r\nexport const lateralBarStyles = theme => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,    \r\n  },\r\n  drawerPaper: {\r\n    boxShadow: '1px 1px 1px rgba(0, 0, 0, 0.16), 1px 1px 1px rgba(0, 0, 0, 0.23)',\r\n    backgroundColor: primaryColor.light,\r\n    color: 'white',\r\n    width: drawerWidth,\r\n  },\r\n  list: {\r\n    width: 250,\r\n    textAlign: \"left\",\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.dark,\r\n    }\r\n  },\r\n  nestedList: {\r\n    width: drawerWidth - 20,\r\n    marginLeft: 20,\r\n  },\r\n  nestedItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.light,\r\n    }\r\n  },\r\n  lateralIcon: {\r\n    height: 40,\r\n    width: 40,\r\n    marginLeft: -5,\r\n    marginTop: 3,\r\n    padding: 0\r\n  }\r\n});\r\n\r\nconst projectDrawerWidth = 250;\r\nexport const ProjectsStyles = theme => ({\r\n  drawer: {\r\n    width: projectDrawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    left: 60,\r\n    boxShadow: '1px 1px 1px rgba(0, 0, 0, 0.16), 1px 1px 1px rgba(0, 0, 0, 0.23)',\r\n    backgroundColor: primaryColor.light,\r\n    color: 'white',\r\n    width: projectDrawerWidth,\r\n  },\r\n  list: {\r\n    textAlign: \"left\",\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.dark,\r\n    }\r\n  },\r\n  category: {\r\n    boxShadow: '2px 2px 2px rgba(0, 0, 0, 0.16), 2px 2px 2px rgba(0, 0, 0, 0.23)',\r\n    backgroundColor: primaryColor.light,\r\n    color: 'white',\r\n    height: 30,\r\n  },\r\n  nestedList: {\r\n    width: projectDrawerWidth - 20,\r\n    marginLeft: 20,\r\n  },\r\n  nestedItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.light,\r\n    }\r\n  },\r\n  box: {\r\n    backgroundColor: primaryColor.main,\r\n    color: 'white',\r\n    paddingLeft: 10,\r\n    flexShrink: 0,    \r\n  }\r\n});\r\n\r\n\r\nexport const TabsStyles = theme => ({\r\n  header: {\r\n    flexShrink: 0,\r\n    height: 40,\r\n    width: (window.screen.width - 310),\r\n    marginLeft: 310,\r\n    backgroundColor: primaryColor.main\r\n  }\r\n});\r\n\r\nexport const loadingStyle = {\r\n  height: '-webkit-fill-available',\r\n  top: 0\r\n};\r\n\r\nexport const priorityFormStyles = {\r\n  content: {\r\n    paddingBottom: 100\r\n  }\r\n};\r\n\r\nconst stylesheet = {};\r\n\r\nexport default stylesheet;","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { observable, decorate  } from 'mobx';\nimport { lateralBarStyles } from '../styles';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Drawer from '@material-ui/core/Drawer';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n\nclass LateralBar extends Component {\n  pageState = {};\n\n  /**\n   * Class constructor.\n   */\n  constructor (props) {\n    super(props);\n\n    // Set the initial component state.\n    this.pageState = {\n    };\n  }\n\n  render () {\n    const { classes } = this.props;\n    return (\n      <div\n        className={classes.list}\n        role=\"presentation\"\n      >\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={true}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <List>\n            <ListItem button key={'Download'} title=\"Download\">\n              <CloudDownloadIcon className={classes.lateralIcon} />\n            </ListItem>\n            <ListItem button key={'LinkedIn'} title=\"LinkedIn\">\n              <LinkedInIcon className={classes.lateralIcon} />\n            </ListItem>\n            <ListItem button key={'GitHub'} title=\"GitHub\">\n              <GitHubIcon className={classes.lateralIcon} />\n            </ListItem>\n          </List>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\n// Define received props types for validation.\nLateralBar.propTypes = {\n};\n\ndecorate(LateralBar, {\n  pageState: observable\n});\n\nexport default withStyles(lateralBarStyles)(LateralBar);","import React, {Component, Fragment} from 'react';\nimport { observable, decorate  } from 'mobx';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { ProjectsStyles } from '../styles';\nimport {List, ListItem, Typography, Box} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Drawer from '@material-ui/core/Drawer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst resetClasses = 'p-0 mb-0 mt-0';\n\nclass Projects extends Component {\n  pageState = {};\n\n  /**\n   * Class constructor.\n   */\n  constructor (props) {\n    super(props);\n\n    // Set the initial component state.\n    this.pageState = {\n      isProjectsOpen: false,\n    };\n  }\n\n  render () {\n    const { classes } = this.props;\n    const { isProjectsOpen } = this.pageState;\n    return (\n      <div\n        className={classes.list}\n        role=\"presentation\"\n      >\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={true}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <Box component=\"span\" m={0} className={classes.box}>\n            <Typography variant=\"caption\" className={clsx(resetClasses,'ml-3')}> Explorer</Typography>\n          </Box>\n          <div className={clsx(classes.category,'form-inline ml-3',resetClasses)}>\n            <Fragment align=\"left\" className={resetClasses}>\n              { isProjectsOpen ? <ExpandMoreIcon /> : <ExpandLessIcon /> }\n            </Fragment>\n            <Typography  className={clsx('ml-2',resetClasses)}> PROJECTS</Typography>\n          </div>\n          <Box component=\"span\" m={0} className={classes.box} style={{height: '87%'}}>\n          <List\n            component=\"nav\"\n            className={classes.list}\n          >\n            <ListItem button>\n            <Typography >FirstProject.js</Typography>\n            </ListItem>\n            <ListItem button>\n            <Typography >SecondProject.java</Typography>\n            </ListItem>\n            <ListItem button>\n            <Typography >ThirdProject.py</Typography>\n            </ListItem>\n          </List>\n          </Box>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\n// Define received props types for validation.\nProjects.propTypes = {\n};\n\ndecorate(Projects, {\n  pageState: observable\n});\n\nexport default withStyles(ProjectsStyles)(Projects);","import React, {Component} from 'react';\nimport { observable, decorate  } from 'mobx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TabsStyles } from '../styles';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Tabs extends Component {\n  pageState = {};\n\n  /**\n   * Class constructor.\n   */\n  constructor (props) {\n    super(props);\n\n    // Set the initial component state.\n    this.pageState = {\n      value: 0\n    };\n  }\n\n  handleChange = (event, newValue) => {\n    this.pageState.value = newValue;\n  };\n\n  render () {\n    const {classes} = this.props;\n    return (\n      <AppBar className={clsx(\"header form-inline\",classes.header)} position=\"static\">\n        <Toolbar className=\"pl-0\">\n          asd\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\n// Define received props types for validation.\nTabs.propTypes = {\n};\n\ndecorate(Tabs, {\n  pageState: observable\n});\n\nexport default withStyles(TabsStyles)(Tabs);","import React, {Component} from 'react';\nimport { observable, decorate  } from 'mobx';\nimport {cv} from './config.json'\nimport './static/css/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport { baseStyles } from './styles.js';\nimport clsx from 'clsx';\nimport LateralBar from './components/LateralBar.js';\nimport Projects from './components/Projects.js';\nimport Tabs from './components/Tabs.js';\n\nclass App extends Component {\n  pageState = {};\n\n  /**\n   * Class constructor.\n   */\n  constructor (props) {\n    super(props);\n\n    // Set the initial component state.\n    this.pageState = {\n    };\n  }\n\n  openCv = () => {\n    window.open(cv);\n  }\n\n  render(){\n    const {classes} = this.props;\n    return (\n      <div>\n        <Tabs />\n        <div className={clsx(\"App\", classes.app)}>\n          <LateralBar />\n          <Projects />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Define received props types for validation.\nApp.propTypes = {\n};\n\ndecorate(App, {\n  pageState: observable\n});\n\nexport default withStyles(baseStyles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}