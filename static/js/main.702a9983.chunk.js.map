{"version":3,"sources":["styles.js","components/LateralBar.js","components/Projects.js","components/Tab.js","components/Tabs.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["primaryColor","LateralBar","props","pageState","onClickIcon","index","url","cv","linkedin","github","window","open","focus","classes","this","className","list","role","Drawer","drawer","variant","anchor","paper","drawerPaper","List","ListItem","button","key","title","onClick","CloudDownload","lateralIcon","LinkedIn","GitHub","Component","decorate","observable","withStyles","theme","width","flexShrink","boxShadow","backgroundColor","color","textAlign","listItem","nestedList","drawerWidth","marginLeft","nestedItem","height","marginTop","padding","Projects","isProjectsOpen","Box","component","box","Typography","clsx","category","ExpandMore","ExpandLess","projects","Object","keys","map","project","left","projectDrawerWidth","paddingLeft","Tab","handleClick","selected","text","ico","tab","action","cursor","observer","Tabs","handleChange","newValue","handleChangeTab","selectedTab","selectedProject","headerContainer","AppBar","header","position","Toolbar","Person","Work","School","Build","icon","subHeader","display","flexDirection","screen","Content","container","content","flex","paddingTop","overflowY","App","handleChangeProject","library","add","fab","app","minWidth","overflow","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"w8BAGaA,EACJ,UADIA,EAEL,UAFKA,EAGL,UAHKA,EAIL,UAJKA,EAKM,U,yFCIbC,E,YAGJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAHRC,UAAY,GAEO,EAKnBC,YAAc,SAAAC,GACZ,IAAIC,EAAM,KACV,OAAQD,GACN,IAAK,WACHC,EAAMC,IACN,MACF,IAAK,WACHD,EAAME,IACN,MACF,IAAK,SACHF,EAAMG,KAIAH,EAAMI,OAAOC,KAAKL,EAAK,UAAYI,QACzCE,SAlBJ,EAAKT,UAAY,GAFA,E,sEAuBT,IAAD,OACCU,EAAYC,KAAKZ,MAAjBW,QACR,OACE,yBAAKE,UAAWF,EAAQG,KAAMC,KAAK,gBACjC,kBAACC,EAAA,EAAD,CACEH,UAAWF,EAAQM,OACnBC,QAAQ,aACRC,OAAO,OACPV,MAAM,EACNE,QAAS,CACPS,MAAOT,EAAQU,cAGjB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,IAAK,WACLC,MAAM,cACNC,QAAS,kBAAM,EAAKzB,YAAY,cAEhC,kBAAC0B,EAAA,EAAD,CAAef,UAAWF,EAAQkB,eAEpC,kBAACN,EAAA,EAAD,CACEC,QAAM,EACNC,IAAK,WACLC,MAAM,WACNC,QAAS,kBAAM,EAAKzB,YAAY,cAEhC,kBAAC4B,EAAA,EAAD,CAAUjB,UAAWF,EAAQkB,eAE/B,kBAACN,EAAA,EAAD,CACEC,QAAM,EACNC,IAAK,SACLC,MAAM,SACNC,QAAS,kBAAM,EAAKzB,YAAY,YAEhC,kBAAC6B,EAAA,EAAD,CAAQlB,UAAWF,EAAQkB,sB,GA9DhBG,aA+EzBC,YAASlC,EAAY,CACnBE,UAAWiC,MAGEC,mBDzBiB,SAAAC,GAAK,MAAK,CACxCnB,OAAQ,CACNoB,MAHgB,GAIhBC,WAAY,GAEdjB,YAAa,CACXkB,UAAW,mEACXC,gBAAiB1C,EACjB2C,MAAO3C,EACPuC,MAVgB,IAYlBvB,KAAM,CACJuB,MAAO,IACPK,UAAW,QAEbC,SAAU,CACR,UAAW,CACTH,gBAAiB1C,IAGrB8C,WAAY,CACVP,MAAOQ,GACPC,WAAY,IAEdC,WAAY,CACV,UAAW,CACTP,gBAAiB1C,IAGrB+B,YAAa,CACXmB,OAAQ,GACRX,MAAO,GACPS,YAAa,EACbG,UAAW,EACXC,QAAS,MCTEf,CAA6BpC,G,yCCnFtCoD,E,YAGJ,WAAYnD,GAAQ,IAAD,8BACjB,4CAAMA,KAHRC,UAAY,GAIV,EAAKA,UAAY,CACfmD,gBAAgB,GAHD,E,sEAOT,IACAzC,EAAYC,KAAKZ,MAAjBW,QACAyC,EAAmBxC,KAAKX,UAAxBmD,eACR,OACE,yBACEvC,UAAWF,EAAQG,KACnBC,KAAK,gBAEL,kBAACC,EAAA,EAAD,CACEP,KAAM2C,EACNjC,OAAO,OACPD,QAAQ,aACRL,UAAWF,EAAQM,OACnBN,QAAS,CAAES,MAAOT,EAAQU,cAE1B,kBAACgC,EAAA,EAAD,CACEC,UAAU,OACVzC,UAAWF,EAAQ4C,KAEnB,kBAACC,EAAA,EAAD,CACEtC,QAAQ,UACRL,UAAW4C,YAjCJ,gBAiCuB,SAFhC,aAOF,yBACE5C,UAAW4C,YAAK9C,EAAQ+C,SAAU,mBAvCzB,kBAyCRN,EAAiB,kBAACO,EAAA,EAAD,MAAiB,kBAACC,EAAA,EAAD,MACnC,kBAACJ,EAAA,EAAD,CACE3C,UAAW4C,YAAK,OA3CT,kBA0CT,aAMF,kBAACJ,EAAA,EAAD,CACEC,UAAU,OACVzC,UAAWF,EAAQkD,UAEnB,kBAACvC,EAAA,EAAD,CACEgC,UAAU,MACVzC,UAAWF,EAAQG,MAGjBgD,OAAOC,KAAKF,GAAUG,KAAI,SAACC,EAAS9D,GAAV,OACxB,kBAACoB,EAAA,EAAD,CAAUE,IAAKtB,EAAOqB,QAAM,GAC1B,kBAACgC,EAAA,EAAD,KAAaK,EAASI,GAAT,kB,GAzDVjC,aA8EvBC,YAASkB,EAAU,CACjBlD,UAAWiC,MAGEC,mBFkBe,SAAAC,GAAK,MAAK,CACtCnB,OAAQ,CACNoB,MAHuB,IAIvBC,WAAY,GAEdjB,YAAa,CACX6C,KAAM,GACN3B,UAAW,mEACXC,gBAAiB1C,EACjB2C,MAAO3C,EACPuC,MAXuB,KAazBvB,KAAM,CACJ4B,UAAW,QAEbC,SAAU,CACR,UAAW,CACTH,gBAAiB1C,IAGrB4D,SAAU,CACRnB,UAAW,mEACXC,gBAAiB1C,EACjB2C,MAAO3C,EACPkD,OAAQ,IAEVJ,WAAY,CACVP,MAAO8B,IACPrB,WAAY,IAEdC,WAAY,CACV,UAAW,CACTP,gBAAiB1C,IAGrByD,IAAK,CACHf,gBAAiB1C,EACjB2C,MAAO3C,EACPsE,YAAa,GACb9B,WAAY,GAEduB,SAAU,CACRrB,gBAAiB1C,EACjB2C,MAAO3C,EACPsE,YAAa,GACb9B,WAAY,EACZU,OAAQ,UEhEGb,CAA2BgB,G,wDClFpCkB,E,YAGJ,WAAYrE,GAAQ,IAAD,8BACjB,4CAAMA,KAHRC,UAAY,GAEO,EAMnBqE,YAAc,WACZ,EAAKtE,MAAMsE,YAAY,EAAKtE,MAAMG,QALlC,EAAKF,UAAY,GAFA,E,sEAUT,IAAD,EACkCW,KAAKZ,MAAtCW,EADD,EACCA,QAAS4D,EADV,EACUA,SAAUC,EADpB,EACoBA,KAAMC,EAD1B,EAC0BA,IACjC,OACE,yBACE5D,UAAW4C,YAAK,GAAMc,EAAY5D,EAAQ4D,SAAW5D,EAAQ+D,KAC7D/C,QAASf,KAAK0D,aAEd,kBAACd,EAAA,EAAD,CACE3C,UAAW4C,YAAK,oCAChBvC,QAAQ,WAEPuD,EAAKD,Q,GAxBExC,aAwClBC,YAASoC,EAAK,CACZpE,UAAWiC,IACXoC,YAAaK,MAGAxC,mBHoIU,SAAAC,GAAK,MAAK,CACjCsC,IAAK,CACH1B,OAAQ,GACRX,MAAO,IACPa,QAAS,EACTD,WAAY,GACZR,MAAO3C,EACP0C,gBAAiB1C,EACjB8E,OAAQ,WAEVL,SAAU,CACRvB,OAAQ,GACRX,MAAO,IACPa,QAAS,EACTD,WAAY,GACZR,MAAO3C,EACP0C,gBAAiB1C,EACjB8E,OAAQ,cGrJGzC,CAAsB0C,YAASR,IC1CxCS,E,YAGJ,WAAY9E,GAAQ,IAAD,8BACjB,4CAAMA,KAHRC,UAAY,GAEO,EAKnB8E,aAAe,SAACC,GACd,EAAKhF,MAAMiF,gBAAgBD,IAJ3B,EAAK/E,UAAY,GAFA,E,sEAST,IAAD,SAC2CW,KAAKZ,MAA/CW,EADD,EACCA,QAASuE,EADV,EACUA,YAAaC,EADvB,EACuBA,gBAC9B,OACE,yBAAKtE,UAAW4C,YAAK,kBAAmB9C,EAAQyE,kBAC9C,kBAACC,EAAA,EAAD,CAAQxE,UAAW4C,YAAK,SAAU9C,EAAQ2E,QAASC,SAAS,UAC1D,kBAACC,EAAA,EAAD,CAAS3E,UAAU,QACjB,kBAAC,EAAD,CACEV,MAAO,EACPqE,KAAK,UACLD,SAA2B,IAAhBW,EACXrE,UAAU,qBACVyD,YAAa1D,KAAKmE,aAClBN,IAAK,kBAACgB,EAAA,EAAD,CAAQ5E,UAAU,WAEzB,kBAAC,EAAD,CACEV,MAAO,EACPqE,KAAK,aACLD,SAA2B,IAAhBW,EACXrE,UAAU,qBACVyD,YAAa1D,KAAKmE,aAClBN,IAAK,kBAACiB,EAAA,EAAD,CAAM7E,UAAU,WAEvB,kBAAC,EAAD,CACEV,MAAO,EACPqE,KAAK,YACLD,SAA2B,IAAhBW,EACXrE,UAAU,qBACVyD,YAAa1D,KAAKmE,aAClBN,IAAK,kBAACkB,EAAA,EAAD,CAAQ9E,UAAU,WAEzB,kBAAC,EAAD,CACEV,MAAO,EACPqE,KAAK,SACLD,SAA2B,IAAhBW,EACXrE,UAAU,qBACVyD,YAAa1D,KAAKmE,aAClBN,IAAK,kBAACmB,EAAA,EAAD,CAAO/E,UAAU,WAGrB,WACC,GAAIsE,EACF,OACE,kBAAC,EAAD,CACEhF,MAAO,EACPqE,KAAK,UACLD,SAA2B,IAAhBW,EACXrE,UAAU,qBACVyD,YAAa,EAAKS,aAClBN,IAAK,kBAAC,IAAD,CAAiB5D,UAAU,aAAagF,KAAM,CAAC,MAAO,QATlE,KAiBP,kBAACR,EAAA,EAAD,CAAQxE,UAAW4C,YAAK,YAAa9C,EAAQmF,WAAYP,SAAS,UAChE,kBAAC/B,EAAA,EAAD,CAAYtC,QAAQ,UAAUL,UAAW4C,YAAK,aAA9C,qBAEK,WACC,OAAQyB,GACN,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,aACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,SACT,QACE,MAAM,eAXX,U,GAvEIlD,aAsGnBC,YAAS6C,EAAM,CACb7E,UAAWiC,MAGEC,mBJ4CW,SAAAC,GAAK,MAAK,CAClCgD,gBAAiB,CACfW,QAAS,OACTC,cAAe,UAEjBV,OAAQ,CACNhD,WAAY,EACZU,OAAQ,GACRX,MAAQ7B,OAAOyF,OAAO5D,MAAQ,IAC9BS,WAAY,IACZN,gBAAiB1C,GAEnBgG,UAAW,CACTxD,WAAY,EACZU,OAAQ,GACRX,MAAQ7B,OAAOyF,OAAO5D,MAAQ,IAC9BS,WAAY,IACZN,gBAAiB1C,MI7DNqC,CAAuB0C,YAASC,IC/GzCoB,E,YAGJ,WAAYlG,GAAQ,IAAD,8BACjB,4CAAMA,KAHRC,UAAY,GAIV,EAAKA,UAAY,GAFA,E,sEAMT,IACAU,EAAYC,KAAKZ,MAAjBW,QACR,OACE,yBAAKE,UAAW4C,YAAK,YAAa9C,EAAQwF,YACxC,yBAAKtF,UAAW4C,YAAK,UAAW9C,EAAQyF,gB,GAb1BpE,aA8BtBC,YAASiE,EAAS,CAChBjG,UAAWiC,MAGEC,mBLuLc,SAAAC,GAAK,MAAK,CACrC+D,UAAW,CACTJ,QAAS,OACTC,cAAe,MACfhD,OAAQ,UACRX,MAAO,MACPS,WAAY,OACZG,UAAW,QAEbmD,QAAS,CACPC,KAAM,EACNC,WAAY,OACZC,UAAW,aKnMApE,CAA0B+D,GC1BnCM,G,kBAGJ,WAAYxG,GAAQ,IAAD,8BACjB,4CAAMA,KAHRC,UAAY,GAEO,EASnBwG,oBAAsB,SAACxC,GACrB,EAAKhE,UAAUkF,gBAAkBlB,GAVhB,EAanBgB,gBAAkB,SAACP,GACjB,EAAKzE,UAAUiF,YAAcR,GAZ7B,EAAKzE,UAAY,CACfkF,gBAAiB,KACjBD,YAAa,GAEfwB,IAAQC,IAAIC,KANK,E,sEAiBT,IAAD,EACkChG,KAAKX,UAAtCkF,EADD,EACCA,gBAAiBD,EADlB,EACkBA,YACjBvE,EAAYC,KAAKZ,MAAjBW,QACR,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CACEuE,YAAaA,EACbC,gBAAiBA,EACjBF,gBAAiBrE,KAAKqE,kBAExB,yBAAKpE,UAAW4C,YAAK,MAAO9C,EAAQkG,MAClC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAjCQ7E,cAgDlBC,YAASuE,EAAK,CACZvG,UAAWiC,MAGEC,kBNhBW,CACxB0E,IAAK,CAEHC,SAAU,OACVvB,SAAU,WACVwB,SAAU,UAEZX,QAAS,CACPlD,QAAS,KMQEf,CAAuB0C,YAAS2B,IC1D3BQ,QACW,cAA7BxG,OAAOyG,SAASC,UAEe,UAA7B1G,OAAOyG,SAASC,UAEhB1G,OAAOyG,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.702a9983.chunk.js","sourcesContent":["/* \r\n  Base colors\r\n*/\r\nexport const primaryColor = {\r\n  light: '#333842',\r\n  main: '#282c34',\r\n  dark: '#070709',\r\n  text: '#E8F3F8',\r\n  backgroundColor: '#1d2026'\r\n};\r\n\r\nexport const secondaryColor = {\r\n  light: '#FDB556',\r\n  main: '#F36B21',\r\n  dark: '#C2551A'\r\n};\r\n\r\n/* \r\n  Root Styles\r\n*/\r\nexport const rootStyles = {\r\n  outerLoading: {\r\n    position: 'fixed',\r\n    height: '100%',\r\n    width: '100%',\r\n    zIndex: 2200,\r\n    display: 'table',\r\n    backgroundColor: 'rgba(255, 255, 255, .4)'\r\n  },\r\n  innerLoading: {\r\n    display: 'table-cell',\r\n    textAlign: 'center',\r\n    verticalAlign: 'middle'\r\n  },\r\n  snackbar: {\r\n    height: 'auto',\r\n    lineHeight: 3,\r\n    whiteSpace: 'pre-line'\r\n  },\r\n  main: {\r\n    minHeight: '100%',\r\n    minWidth: '100%',\r\n    position: 'absolute',\r\n    backgroundColor: primaryColor.main\r\n  },\r\n  image: {\r\n    height: 200,\r\n    paddingTop: '10px'\r\n  },\r\n};\r\n\r\n/* \r\n  Base Styles\r\n*/\r\nexport const baseStyles = {\r\n  app: {\r\n    //minHeight: '100%',\r\n    minWidth: '100%',\r\n    position: 'absolute',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    padding: 10\r\n  },\r\n};\r\n\r\n/* \r\n  Lateral Bar Styles (link icons)\r\n*/\r\nconst drawerWidth = 60;\r\nexport const lateralBarStyles = theme => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    boxShadow: '1px 1px 1px rgba(0, 0, 0, 0.16), 1px 1px 1px rgba(0, 0, 0, 0.23)',\r\n    backgroundColor: primaryColor.light,\r\n    color: primaryColor.text,\r\n    width: drawerWidth,\r\n  },\r\n  list: {\r\n    width: 250,\r\n    textAlign: \"left\",\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.dark,\r\n    }\r\n  },\r\n  nestedList: {\r\n    width: drawerWidth - 20,\r\n    marginLeft: 20,\r\n  },\r\n  nestedItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.light,\r\n    }\r\n  },\r\n  lateralIcon: {\r\n    height: 40,\r\n    width: 40,\r\n    marginLeft: -5,\r\n    marginTop: 3,\r\n    padding: 0\r\n  }\r\n});\r\n\r\n/* \r\n  Projects list Styles\r\n*/\r\nconst projectDrawerWidth = 250;\r\nexport const ProjectsStyles = theme => ({\r\n  drawer: {\r\n    width: projectDrawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    left: 60,\r\n    boxShadow: '1px 1px 1px rgba(0, 0, 0, 0.16), 1px 1px 1px rgba(0, 0, 0, 0.23)',\r\n    backgroundColor: primaryColor.light,\r\n    color: primaryColor.text,\r\n    width: projectDrawerWidth,\r\n  },\r\n  list: {\r\n    textAlign: \"left\",\r\n  },\r\n  listItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.dark,\r\n    }\r\n  },\r\n  category: {\r\n    boxShadow: '2px 2px 2px rgba(0, 0, 0, 0.16), 2px 2px 2px rgba(0, 0, 0, 0.23)',\r\n    backgroundColor: primaryColor.light,\r\n    color: primaryColor.text,\r\n    height: 30,\r\n  },\r\n  nestedList: {\r\n    width: projectDrawerWidth - 20,\r\n    marginLeft: 20,\r\n  },\r\n  nestedItem: {\r\n    '&:hover': {\r\n      backgroundColor: primaryColor.light,\r\n    }\r\n  },\r\n  box: {\r\n    backgroundColor: primaryColor.main,\r\n    color: primaryColor.text,\r\n    paddingLeft: 10,\r\n    flexShrink: 0,\r\n  },\r\n  projects: {\r\n    backgroundColor: primaryColor.main,\r\n    color: primaryColor.text,\r\n    paddingLeft: 10,\r\n    flexShrink: 0,\r\n    height: '87%'\r\n  }\r\n});\r\n\r\n/* \r\n  Header Tabs Styles\r\n*/\r\nexport const TabsStyles = theme => ({\r\n  headerContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    flexShrink: 0,\r\n    height: 35,\r\n    width: (window.screen.width - 310),\r\n    marginLeft: 310,\r\n    backgroundColor: primaryColor.main\r\n  },\r\n  subHeader: {\r\n    flexShrink: 0,\r\n    height: 25,\r\n    width: (window.screen.width - 310),\r\n    marginLeft: 310,\r\n    backgroundColor: primaryColor.backgroundColor\r\n  }\r\n});\r\n\r\n/* \r\n  Tabs Styles\r\n*/\r\nexport const TabStyles = theme => ({\r\n  tab: {\r\n    height: 35,\r\n    width: 140,\r\n    padding: 0,\r\n    marginTop: -30,\r\n    color: primaryColor.text,\r\n    backgroundColor: primaryColor.main,\r\n    cursor: 'pointer'\r\n  },\r\n  selected: {\r\n    height: 35,\r\n    width: 140,\r\n    padding: 0,\r\n    marginTop: -30,\r\n    color: primaryColor.text,\r\n    backgroundColor: primaryColor.dark,\r\n    cursor: 'pointer'\r\n  }\r\n});\r\n\r\n/* \r\n  Loading Style\r\n*/\r\nexport const loadingStyle = {\r\n  height: '-webkit-fill-available',\r\n  top: 0\r\n};\r\n\r\nexport const priorityFormStyles = {\r\n  content: {\r\n    paddingBottom: 100\r\n  }\r\n};\r\n\r\n/* \r\n  Container Style (content)\r\n*/\r\nexport const ContentStyles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    height: '93.35vh',\r\n    width: '84%',\r\n    marginLeft: 'auto',\r\n    marginTop: '0.1%',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    paddingTop: '0.5%',\r\n    overflowY: 'scroll'\r\n  }\r\n});\r\n\r\nconst stylesheet = {};\r\n\r\nexport default stylesheet;","import React, { Component } from 'react';\r\nimport { observable, decorate } from 'mobx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { lateralBarStyles } from '../styles';\r\nimport { cv, linkedin, github } from '../config.json';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { List, ListItem, Drawer } from '@material-ui/core';\r\nimport { CloudDownload, LinkedIn, GitHub } from '@material-ui/icons';\r\n\r\n/*\r\n  LateralBar Main Class\r\n*/\r\nclass LateralBar extends Component {\r\n  pageState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pageState = {};\r\n  };\r\n\r\n  onClickIcon = index => {\r\n    let url = null;\r\n    switch (index) {\r\n      case 'download':\r\n        url = cv;\r\n        break;\r\n      case 'linkedin':\r\n        url = linkedin;\r\n        break;\r\n      case 'github':\r\n        url = github;\r\n        break;\r\n      default:\r\n    }\r\n    let win = url ? window.open(url, '_blank') : window;\r\n    win.focus();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.list} role=\"presentation\">\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={true}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <List>\r\n            <ListItem\r\n              button\r\n              key={'Download'}\r\n              title=\"Download CV\"\r\n              onClick={() => this.onClickIcon('download')}\r\n            >\r\n              <CloudDownload className={classes.lateralIcon} />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              key={'LinkedIn'}\r\n              title=\"LinkedIn\"\r\n              onClick={() => this.onClickIcon('linkedin')}\r\n            >\r\n              <LinkedIn className={classes.lateralIcon} />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              key={'GitHub'}\r\n              title=\"GitHub\"\r\n              onClick={() => this.onClickIcon('github')}\r\n            >\r\n              <GitHub className={classes.lateralIcon} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n/*  \r\n  Define received props types for validation. \r\n*/\r\nLateralBar.propTypes = {};\r\n\r\n/*\r\n  MobX decorations.\r\n*/\r\ndecorate(LateralBar, {\r\n  pageState: observable\r\n});\r\n\r\nexport default withStyles(lateralBarStyles)(LateralBar);","import React, { Component } from 'react';\r\nimport { observable, decorate } from 'mobx';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ProjectsStyles } from '../styles';\r\nimport projects from '../projects.json';\r\nimport { List, ListItem, Typography, Box, Drawer } from '@material-ui/core';\r\nimport { ExpandMore, ExpandLess } from '@material-ui/icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst resetClasses = 'p-0 mb-0 mt-0';\r\n\r\nclass Projects extends Component {\r\n  pageState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pageState = {\r\n      isProjectsOpen: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { isProjectsOpen } = this.pageState;\r\n    return (\r\n      <div\r\n        className={classes.list}\r\n        role=\"presentation\"\r\n      >\r\n        <Drawer\r\n          open={isProjectsOpen}\r\n          anchor=\"left\"\r\n          variant=\"persistent\"\r\n          className={classes.drawer}\r\n          classes={{ paper: classes.drawerPaper }}\r\n        >\r\n          <Box\r\n            component=\"span\"\r\n            className={classes.box}\r\n          >\r\n            <Typography\r\n              variant=\"caption\"\r\n              className={clsx(resetClasses, 'ml-3')}\r\n            >\r\n              EXPLORER\r\n            </Typography>\r\n          </Box>\r\n          <div\r\n            className={clsx(classes.category, 'form-inline ml-3', resetClasses)}\r\n          >\r\n            {isProjectsOpen ? <ExpandMore /> : <ExpandLess />}\r\n            <Typography\r\n              className={clsx('ml-2', resetClasses)}\r\n            >\r\n              PROJECTS\r\n            </Typography>\r\n          </div>\r\n          <Box\r\n            component=\"span\"\r\n            className={classes.projects}\r\n          >\r\n            <List\r\n              component=\"nav\"\r\n              className={classes.list}\r\n            >\r\n              {\r\n                Object.keys(projects).map((project, index) => (\r\n                  <ListItem key={index} button>\r\n                    <Typography>{projects[project]['name']}</Typography>\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </Box>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n/*  \r\n  Define received props types for validation.\r\n*/\r\nProjects.propTypes = {\r\n};\r\n\r\n/*\r\n  MobX decorations.\r\n*/\r\ndecorate(Projects, {\r\n  pageState: observable\r\n});\r\n\r\nexport default withStyles(ProjectsStyles)(Projects);","import React, { Component } from 'react';\r\nimport { observable, decorate, action } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { TabStyles } from '../styles';\r\nimport clsx from 'clsx';\r\nimport { Typography } from '@material-ui/core';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/*\r\n  Tap Main Class\r\n*/\r\nclass Tab extends Component {\r\n  pageState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pageState = {\r\n    };\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.handleClick(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    const { classes, selected, text, ico } = this.props;\r\n    return (\r\n      <div\r\n        className={clsx('', ((selected) ? classes.selected : classes.tab))}\r\n        onClick={this.handleClick}\r\n      >\r\n        <Typography\r\n          className={clsx('text-left align-middle mt-1 ml-2')}\r\n          variant=\"inherit\"\r\n        >\r\n          {ico}{text}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n/*  \r\n  Define received props types for validation.\r\n*/\r\nTab.propTypes = {\r\n};\r\n\r\n/*\r\n  MobX decorations.\r\n*/\r\ndecorate(Tab, {\r\n  pageState: observable,\r\n  handleClick: action\r\n});\r\n\r\nexport default withStyles(TabStyles)(observer(Tab));","import React, { Component } from 'react';\r\nimport { observable, decorate } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { TabsStyles } from '../styles';\r\nimport clsx from 'clsx';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { Person, School, Work, Build } from '@material-ui/icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Tab from './Tab'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/*\r\n  Tabs Main Class\r\n*/\r\nclass Tabs extends Component {\r\n  pageState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pageState = {};\r\n  }\r\n\r\n  handleChange = (newValue) => {\r\n    this.props.handleChangeTab(newValue);\r\n  };\r\n\r\n  render() {\r\n    const { classes, selectedTab, selectedProject } = this.props;\r\n    return (\r\n      <div className={clsx('headerContainer', classes.headerContainer)}>\r\n        <AppBar className={clsx('header', classes.header)} position=\"sticky\">\r\n          <Toolbar className=\"pl-0\">\r\n            <Tab\r\n              index={0}\r\n              text=\"Profile\"\r\n              selected={(selectedTab === 0)}\r\n              className=\"border border-dark\"\r\n              handleClick={this.handleChange}\r\n              ico={<Person className=\"mr-2\" />}\r\n            />\r\n            <Tab\r\n              index={1}\r\n              text=\"Experience\"\r\n              selected={(selectedTab === 1)}\r\n              className=\"border border-dark\"\r\n              handleClick={this.handleChange}\r\n              ico={<Work className=\"mr-2\" />}\r\n            />\r\n            <Tab\r\n              index={2}\r\n              text=\"Education\"\r\n              selected={(selectedTab === 2)}\r\n              className=\"border border-dark\"\r\n              handleClick={this.handleChange}\r\n              ico={<School className=\"mr-2\" />}\r\n            />\r\n            <Tab\r\n              index={3}\r\n              text=\"Skills\"\r\n              selected={(selectedTab === 3)}\r\n              className=\"border border-dark\"\r\n              handleClick={this.handleChange}\r\n              ico={<Build className=\"mr-2\" />}\r\n            />\r\n            {\r\n              (() => {\r\n                if (selectedProject) {\r\n                  return (\r\n                    <Tab\r\n                      index={4}\r\n                      text=\"Project\"\r\n                      selected={(selectedTab === 4)}\r\n                      className=\"border border-dark\"\r\n                      handleClick={this.handleChange}\r\n                      ico={<FontAwesomeIcon className=\"mr-2 fa-lg\" icon={['fab', '']} />}\r\n                    />\r\n                  )\r\n                }\r\n              })()\r\n            }\r\n          </Toolbar>\r\n        </AppBar>\r\n        <AppBar className={clsx('subHeader', classes.subHeader)} position=\"sticky\">\r\n          <Typography variant=\"caption\" className={clsx('m-1 ml-3')}>\r\n            src > portfolio > {\r\n              (() => {\r\n                switch (selectedTab) {\r\n                  case 0:\r\n                    return 'Profile'\r\n                  case 1:\r\n                    return 'Experience'\r\n                  case 2:\r\n                    return 'Education'\r\n                  case 3:\r\n                    return 'Skills'\r\n                  default:\r\n                    return `Projects > ${''}`\r\n                }\r\n              })()\r\n            }\r\n          </Typography>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* \r\n  Define received props types for validation.\r\n*/\r\nTabs.propTypes = {\r\n};\r\n\r\n/*\r\n  MobX decorations.\r\n*/\r\ndecorate(Tabs, {\r\n  pageState: observable\r\n});\r\n\r\nexport default withStyles(TabsStyles)(observer(Tabs));","import React, { Component } from 'react';\r\nimport { observable, decorate } from 'mobx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ContentStyles } from '../styles.js';\r\nimport clsx from 'clsx';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/*\r\n  Content Main Class\r\n*/\r\nclass Content extends Component {\r\n  pageState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pageState = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={clsx('Container', classes.container)}>\r\n        <div className={clsx('Content', classes.content)}>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*  \r\n  Define received props types for validation.\r\n*/\r\nContent.propTypes = {\r\n};\r\n\r\n/*\r\n  MobX decorations.\r\n*/\r\ndecorate(Content, {\r\n  pageState: observable\r\n});\r\n\r\nexport default withStyles(ContentStyles)(Content);","import React, { Component, Fragment } from 'react';\r\nimport { observable, decorate } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { baseStyles } from './styles.js';\r\nimport clsx from 'clsx';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport LateralBar from './components/LateralBar';\r\nimport Projects from './components/Projects';\r\nimport Tabs from './components/Tabs';\r\nimport Content from './components/Content';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './static/css/App.css';\r\n\r\n/*\r\n  App Main Class\r\n*/\r\nclass App extends Component {\r\n  pageState = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pageState = {\r\n      selectedProject: null,\r\n      selectedTab: 0,\r\n    };\r\n    library.add(fab);\r\n  }\r\n\r\n  handleChangeProject = (project) => {\r\n    this.pageState.selectedProject = project;\r\n  };\r\n\r\n  handleChangeTab = (tab) => {\r\n    this.pageState.selectedTab = tab;\r\n  };\r\n\r\n  render() {\r\n    const { selectedProject, selectedTab } = this.pageState;\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Tabs\r\n          selectedTab={selectedTab}\r\n          selectedProject={selectedProject}\r\n          handleChangeTab={this.handleChangeTab}\r\n        />\r\n        <div className={clsx('App', classes.app)}>\r\n          <LateralBar />\r\n          <Projects />\r\n          <Content />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n/* \r\n  Define received props types for validation. \r\n*/\r\nApp.propTypes = {};\r\n\r\n/*\r\n  MobX decorations.\r\n*/\r\ndecorate(App, {\r\n  pageState: observable\r\n});\r\n\r\nexport default withStyles(baseStyles)(observer(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './static/css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}